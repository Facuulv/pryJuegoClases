<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>